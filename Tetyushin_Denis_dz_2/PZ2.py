#2. Дан список строк. Например: ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов'].
#Строки-элементы могут содержать цифры, обозначающие часы/минуты/секунды; могут начинаться со знаков + или - и обозначают температуры: "+5", "-7";
#могут быть просто символьными строками.
#Необходимо обработать список: обособить каждое целое число кавычками (добавить строку-кавычку до и после элемента списка, являющегося числом)
#и дополнить это число нулём до двух целочисленных разрядов,
#Т.е. результат примера: ['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов'].
#Сформировать из обработанного списка строку вида: 'в "05" часов "17" минут температура воздуха была "+05" градусов' и вывести ее на экран.
#Формат вывода результата:
#Исходный, результирующий список и строку выводим на экран через print.

#Примеры/Тесты:
#Исходный список:
#['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
#Новый список + добавление элементов-кавычек:
#['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов']

#Исходный список:
#['примерно в', '23', 'часа', '8', 'минут', '03', 'секунд', 'температура', 'воздуха', 'была', '-5', 'градусов Цельсия', 'темп', 'воды', '+12', 'градусов', 'Цельсия']
#Новый список + добавление элементов-кавычек:
#['примерно в', '"', '23', '"', 'часа', '"', '08', '"', 'минут', '"', '03', '"', 'секунд', 'температура', 'воздуха', 'была', '"', '-05', '"', 'градусов Цельсия', 'темп', 'воды', '"', '+12', '"', 'градусов', 'Цельсия']

#Техническое задание

#Список может содержать произвольное кол-во элементов.
#строки-слова это любые строки.
#строки-числа для времени: одна или две цифры, без привязки к ограничениям на 60 минут/секунд и 24 часа. Т.е. '79', 'минут' - это корректно.
#строки-числа для температуры: любое целое число. В начале может быть знак плюс или минус, но может и не быть.
#в начале и конце строк-чисел пробелов нет.
#строки-числа и строки-слова не обязательно идут точно через один. см пример 2.
#Формируя результирующую строку, обратите внимание на отсутствие "лишних" пробелов около кавычек, например "08" минут - правильно, а " 08 " минут - неправильно.
#Примечание:

#Регулярные выражения не используем. Учимся парсить строку самостоятельно.
#Алгоритм

#Сколько проходов по списку вам понадобится? Достаточно одного прохода.
#Подумать, какое условие записать, чтобы выявить числа среди элементов списка?
#Как модифицировать это условие для чисел со знаком? Это первый шаг - парсить строку-число и добавлять нули по необходимости.

<<<<<<< Updated upstream
list = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
#list =['примерно в', '23', 'часа', '8', 'минут', '03', 'секунд', 'температура', 'воздуха', 'была', '-5', 'градусов Цельсия', 'темп', 'воды', '+12', 'градусов', 'Цельсия']

print(" ".join(map(lambda x: '"%s"' % __import__('re').sub('\d+', lambda x: f' { x[0] } '.zfill(2), x) if any(map(str.isdigit, x)) else x, list)))
=======
import re

list = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
#list =['примерно в', '23', 'часа', '8', 'минут', '03', 'секунд', 'температура', 'воздуха', 'была', '-5', 'градусов Цельсия', 'темп', 'воды', '+12', 'градусов', 'Цельсия']

#print(" ".join(map(lambda x: '"%s"' % __import__('re').sub('\d+', lambda x: f' { x[0] } '.zfill(2), x) if any(map(str.isdigit, x)) else x, list)))
print(" ".join(map(lambda x: '"%s"' % re.sub('\d+', lambda x: f' { x[0] } '.zfill(2), x) if any(map(str.isdigit, x)) else x, list)))
>>>>>>> Stashed changes
