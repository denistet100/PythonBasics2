# 4. Задан список чисел. Необходимо создать список, содержащий те его элементы, значения которых больше предыдущего.
# Техническое задание
#
# Здесь нет условия создавать итератор/генератор. Можно использовать comprehensions.
# Формально первый элемент сравнить не с чем. Решите сами, что с ним делать: включать в новый список или нет.
# Можете сравнить его с последним элементом.
# Примеры/Тесты:
#
#
# src = [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55]
# result = [12, 44, 4, 10, 78, 123]
#
# Алгоритм
#
# Как одновременно иметь доступ к текущему элементу списка и к предыдущему для их сравнения?
# Что для этого необходимо? Как сделать это без лишних вычислений? Какие варианты цикла for подойдут лучше всего?
# Помните: сортировка, поиск элемента в последовательности - очень затратные операции.
# Оцените эффективность вашего алгоритма. Смотри общие замечания к практическим заданиям.
# Подумайте, как можно сделать оптимизацию кода по памяти, по скорости.

src = [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55]

result = [src[i+1] if i != 0 else src[i] for i in range(len(src)-1) if src[i+1] > src[i]]

print(result)
