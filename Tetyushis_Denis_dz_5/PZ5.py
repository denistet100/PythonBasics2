# 5. Задан список чисел. Определить элементы списка, не имеющие повторений.
# Сформировать из этих элементов список с сохранением порядка их следования в исходном списке
# Техническое задание
#
# Здесь нет условия создавать итератор/генератор или comprehensions.
# Сохранение исходного порядка в результирующем списке обязательно.
# Примеры/Тесты:
#
#
# src = [2, 2, 2, 7, 23, 1, 44, 44, 3, 2, 10, 7, 4, 11]
# result = [23, 1, 3, 10, 4, 11]
#
# Примечание:
# Алгоритм
#
# Сначала найдите способ определить уникальность элемента в списке.
# Затем подумайте о сохранении порядка исходного списка.
# Оцените эффективность вашего алгоритма. Вспомните о множестве - объекте, который пройден на этом уроке,
# его преимуществах. Как его можно применить.

src = [2, 2, 2, 7, 23, 1, 44, 44, 3, 2, 10, 7, 4, 11]


def func(src2):
    result = []
    for i1 in range(len(src2)):
        if i1 < len(src2)-1:
            if src2[i1] != src2[i1+1] & src2[i1] != src2[i1-1]:
                result.append(src2[i1])
        else:
            if src2[i1] != src2[i1-1]:
                result.append(src2[i1])
    return result


print(func(src))
